<template>
    <view>
    <toast></toast>
    <canlendar
        :currentDate.sync="currentDate"
        :startDate.sync="startDate"
        :endDate.sync="endDate"
        :hasIconList.sync="hasIconList">
    </canlendar>
    </view>
</template>
<script>
    import wepy from 'wepy';
    import wepyCanlendar from '../components/calendar'
    import Toast from 'wepy-com-toast'

    export default class next extends wepy.page {

        config = {
          navigationBarTitleText: 'Calendar'
        };
        components = {
            canlendar:wepyCanlendar,
            toast:Toast
        };

        getData() {
            return new Promise((resolve, reject) => {
                setTimeout(() => {
                    resolve({data: 123});
                }, 3000);
            });
        };

        async onLoad(){
            //通知日历组件可以开始渲染
            //let data = await this.getData();
            //console.error(data);
            this.loadNewsList().then((data)=>{
              console.log(data);
              let dates = data.date;
              let hasIconList = [];
              dates.forEach(ele => {
                let eles = ele.split('-');
                if(eles.length == 3){
                  let item = {};
                  item['year'] = parseInt(eles[0]);
                  item['month'] = parseInt(eles[1]);
                  item['day'] = parseInt(eles[2]);
                  hasIconList.push(item);
                }
              });
              this.data.hasIconList = hasIconList;
              this.data.objects = data;
              this.$apply();
              this.$invoke('canlendar', 'show', {hasIconList: hasIconList})
              this.$broadcast("startRenderCalendar");
            });
        };

        data = {
              currentDate:'2018-06-15',
              startDate:'1999-01-01',
              endDate:'2019-10-01',
              hasIconList:[],
              objects: {},
        };
        // 页面所需数据均需在这里声明，可用于模板数据绑定

        events = {
              calChangeCurrentDate:function (date, e) {
                 //日历当前时间改变回调
                 console.error(date);
              },
              calChangeSelectedDay:function (has_icon,date, e) {
                //点击日历选择天回调
                if(has_icon){
                  wx.navigateTo({
                    url: `/pages/index?year=${date.year}&month=${date.month}&day=${date.day}`  // 打开一个新的同路由页面，但指定不同的数据初始值
                  })
                }else{
                    let promise = this.$invoke('toast', 'show', {
                        title: '无巡视记录',
                    });

                    promise.then((d) => {
                        console.log('toast done');
                    });
                }

              }
            };
            // 声明组件之间的事件处理函数

      loadNewsList() {
        var self = this;
        return new Promise((resove,reject)=>{
          wx.request({
            url: `https://www.shanbay.com/api/v2/news/articles/?ipp=50&page=${1}`,
            success: (res) => {
              if (res.data.msg === 'SUCCESS') {
                let new_data = res.data.data.objects;
                let new_obj = {};
                new_obj['date'] = [];
                new_data.forEach(ele => {
                  let date = ele.date;
                  if(new_obj[date]){
                    new_obj[date].push(ele);
                  }else{
                    new_obj[date] = [ele];
                    new_obj['date'].push(date);
                  }
                });
                resove(new_obj);
              }else{
                resove({});
              }
            },
            fail:(err)=>{
              resove({});
            }
          })
        });
      }
    }

</script>

